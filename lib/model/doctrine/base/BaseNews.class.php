<?php

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property string $slug
 * @property string $content
 * @property string $picture
 * @property string $source
 * 
 * @method string getTitle()   Returns the current record's "title" value
 * @method string getSlug()    Returns the current record's "slug" value
 * @method string getContent() Returns the current record's "content" value
 * @method string getPicture() Returns the current record's "picture" value
 * @method string getSource()  Returns the current record's "source" value
 * @method News   setTitle()   Sets the current record's "title" value
 * @method News   setSlug()    Sets the current record's "slug" value
 * @method News   setContent() Sets the current record's "content" value
 * @method News   setPicture() Sets the current record's "picture" value
 * @method News   setSource()  Sets the current record's "source" value
 * 
 * @package    swbrasil
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('news');
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '100',
             ));
        $this->hasColumn('slug', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '100',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('picture', 'string', 50, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '50',
             ));
        $this->hasColumn('source', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => '100',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}